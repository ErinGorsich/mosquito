tail(tb, 1)$deathI,
tail(tblow, 1)$deathS,
tail(tblow, 1)$deathI,
tail(tblower, 1)$deathS,
tail(tblower, 1)$deathI),
model = rep("synergistic", 6)
)
plot <- rbind(df, df.com, df.syn)
plot$K <- factor(plot$K, levels = c("300", "900", "2000"))
ggplot(data = plot, aes(x = K, y = y, fill = x)) + facet_wrap(~model) +
geom_bar(stat = "identity", position = "dodge") +
ylab("per capita mortality rate at eq") +
xlab("Carrying capacity - proxy for competition") +
guides(fill = guide_legend(title = "individual infection status")) +
theme(legend.position = "bottom")
####################################################
# Plots - mortality rates TB+/TB- individuals
####################################################
tb <- run_one("indep", TRUE, 300)
tblow <- run_one("indep", TRUE, 900)
tblower <- run_one("indep", TRUE, 2000)
df <- data.frame(
x = rep(c("TB-", "TB+"), 3),
K = c("300", "300", "900","900", "2000", "2000"),
y = c(tail(tb, 1)$deathS,
tail(tb, 1)$deathI,
tail(tblow, 1)$deathS,
tail(tblow, 1)$deathI,
tail(tblower, 1)$deathS,
tail(tblower, 1)$deathI),
model = rep("independent", 6)
)
paraC$delta <- 0.05 #???????
tb <- run_one("comp", TRUE, 300)
tblow <- run_one("comp", TRUE, 900)
tblower <- run_one("comp", TRUE, 2000)
df.com <- data.frame(
x = rep(c("TB-", "TB+"), 3),
K = c("300", "300", "900","900", "2000", "2000"),
y = c(tail(tb, 1)$deathS,
tail(tb, 1)$deathI,
tail(tblow, 1)$deathS,
tail(tblow, 1)$deathI,
tail(tblower, 1)$deathS,
tail(tblower, 1)$deathI),
model = rep("compensitory", 6)
)
tb <- run_one("syn", TRUE, 300)
tblow <- run_one("syn", TRUE, 900)
tblower <- run_one("syn", TRUE, 2000)
df.syn <- data.frame(
x = rep(c("TB-", "TB+"), 3),
K = c("300", "300", "900","900", "2000", "2000"),
y = c(tail(tb, 1)$deathS,
tail(tb, 1)$deathI,
tail(tblow, 1)$deathS,
tail(tblow, 1)$deathI,
tail(tblower, 1)$deathS,
tail(tblower, 1)$deathI),
model = rep("synergistic", 6)
)
plot <- rbind(df, df.com, df.syn)
plot$K <- factor(plot$K, levels = c("2000", "900", "300"))
ggplot(data = plot, aes(x = K, y = y, fill = x)) + facet_wrap(~model) +
geom_bar(stat = "identity", position = "dodge") +
ylab("per capita mortality rate at eq") +
xlab("Carrying capacity - proxy for competition") +
guides(fill = guide_legend(title = "individual infection status")) +
theme(legend.position = "bottom") + theme_classic() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(data = plot, aes(x = K, y = y, fill = x)) + facet_wrap(~model) +
geom_bar(stat = "identity", position = "dodge") +
ylab("per capita mortality rate at eq") +
xlab("Carrying capacity - proxy for competition") +
guides(fill = guide_legend(title = "individual infection status")) +
theme(legend.position = "bottom") + theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
plot <- rbind(df, df.com, df.syn)
plot$K <- factor(plot$K, levels = c("2000", "900", "300"),
labels = c("low", "medium", "high"))
ggplot(data = plot, aes(x = K, y = y, fill = x)) + facet_wrap(~model) +
geom_bar(stat = "identity", position = "dodge") +
ylab("per capita mortality rate at eq") +
xlab("Competition (carrying capacity)") +
guides(fill = guide_legend(title = "individual infection status")) +
theme(legend.position = "bottom") + theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(data = plot, aes(x = K, y = y, fill = x)) + facet_wrap(~model) +
geom_bar(stat = "identity", position = "dodge") +
ylab("per capita mortality rate at eq") +
xlab("Competition (carrying capacity)") +
scale_fill_manual(values = discrete("mediumpurple3", "orange")) +
guides(fill = guide_legend(title = "individual infection status")) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.position = "bottom")
ggplot(data = plot, aes(x = K, y = y, fill = x)) + facet_wrap(~model) +
geom_bar(stat = "identity", position = "dodge") +
ylab("per capita mortality rate at eq") +
xlab("Competition (carrying capacity)") +
scale_fill_manual(values = c("mediumpurple3", "orange")) +
guides(fill = guide_legend(title = "individual infection status")) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.position = "bottom")
ggplot(data = plot, aes(x = K, y = y, fill = x)) + facet_wrap(~model) +
geom_bar(stat = "identity", position = "dodge") +
ylab("Per capita mortality rate") +
xlab("Competition (carrying capacity)") +
scale_fill_manual(values = c("mediumpurple3", "orange")) +
guides(fill = guide_legend(title = "individual infection status")) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.position = "bottom")
####################################################
#  Plots - by group type pretty
####################################################
# Synergistic
# #############################
tb <- run_one("syn", TRUE, 1300)
tb2 <- run_one("syn", TRUE, 300)
#check
df.syn <- data.frame(
x = c("no risks", "disease", "competition",
"both risks"),
y = c(tail(tb, 1)$deathS, tail(tb, 1)$deathI,
tail(tb2, 1)$deathS, tail(tb2, 1)$deathI))
df.syn$x <- factor(df.syn$x, levels = df.syn$x, ordered = TRUE)
ggplot(data = df.syn, aes(x = x, y = y)) + geom_bar(stat = "identity")
baseline <- tail(tb, 1)$deathS
df.syn.subset <- data.frame(
x = c("no risks", "disease", "disease", "competition",
"competition", "both risks", "both risks", "both risks", "both risks"),
y = c(baseline,  # baselie
# in disease context, broken down by baseline + added from disease
baseline, tail(tb, 1)$deathI - baseline,
# competition context, broken down by baseline + added from competition
baseline, tail(tb2, 1)$deathS  - baseline,
# combined as three categories
baseline, tail(tb, 1)$deathI - baseline,
tail(tb2, 1)$deathS - baseline,
tail(tb2, 1)$deathI - (tail(tb, 1)$deathI - baseline) -
(tail(tb2, 1)$deathS - baseline)),
risks = c("baseline", "baseline", "disease", "baseline", "competition",
"baseline", "disease", "competition", "extra"))
# Specifiy order to plot
df.syn.subset$x <- factor(df.syn.subset$x,
levels = c("no risks", "disease", "competition", "both risks"),
ordered = TRUE)
df.syn.subset$risks <- factor(df.syn.subset$risks,
levels = c("extra", "disease", "competition", "baseline"),
ordered = TRUE)
# The plot
ggplot(data = df.syn.subset, aes(x = x, y = y, fill = risks)) +
geom_bar(stat = "identity") +
xlab("") + ylab(expression("Per capita mortality rate"~(year^-1))) +
ylim(0, 1.5) +
ggtitle("Synergistic risks model") + theme_classic() +
theme(legend.position = "none",
axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
# Synergistic
# #############################
tb <- run_one("syn", TRUE, 1300)
tb2 <- run_one("syn", TRUE, 300)
#check
df.syn <- data.frame(
x = c("no risks", "disease", "competition",
"both risks"),
y = c(tail(tb, 1)$deathS, tail(tb, 1)$deathI,
tail(tb2, 1)$deathS, tail(tb2, 1)$deathI))
df.syn$x <- factor(df.syn$x, levels = df.syn$x, ordered = TRUE)
ggplot(data = df.syn, aes(x = x, y = y)) + geom_bar(stat = "identity")
baseline <- tail(tb, 1)$deathS
df.syn.subset <- data.frame(
x = c("no risks", "disease", "disease", "competition",
"competition", "both risks", "both risks", "both risks", "both risks"),
y = c(baseline,  # baselie
# in disease context, broken down by baseline + added from disease
baseline, tail(tb, 1)$deathI - baseline,
# competition context, broken down by baseline + added from competition
baseline, tail(tb2, 1)$deathS  - baseline,
# combined as three categories
baseline, tail(tb, 1)$deathI - baseline,
tail(tb2, 1)$deathS - baseline,
tail(tb2, 1)$deathI - (tail(tb, 1)$deathI - baseline) -
(tail(tb2, 1)$deathS - baseline)),
risks = c("baseline", "baseline", "disease", "baseline", "competition",
"baseline", "disease", "competition", "extra"))
# Specifiy order to plot
df.syn.subset$x <- factor(df.syn.subset$x,
levels = c("no risks", "disease", "competition", "both risks"),
ordered = TRUE)
df.syn.subset$risks <- factor(df.syn.subset$risks,
levels = c("extra", "disease", "competition", "baseline"),
ordered = TRUE)
# The plot
ggplot(data = df.syn.subset, aes(x = x, y = y, fill = risks)) +
geom_bar(stat = "identity") +
xlab("") + ylab(expression("Per capita mortality rate"~(year^-1))) +
ylim(0, 1.5) +
ggtitle("Synergistic risks model") + theme_classic() +
theme(legend.position = "none",
axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
# The plot
ggplot(data = df.syn.subset, aes(x = x, y = y, fill = risks)) +
geom_bar(stat = "identity") +
xlab("") + ylab(expression("Per capita mortality rate"~(year^-1))) +
ylim(0, 1.5) +
scale_fill_manual(values = c("gray", "mediumpurple3", "blue", "yellow")) +
ggtitle("Synergistic risks model") + theme_classic() +
theme(legend.position = "none",
axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
library(MASS)
head(birthwt)
str(low)
str(birthwt)
table(birthwt$low)
library(multinom)
library(nnet)
?multinom
oc <- options(contrasts = c("contr.treatment", "contr.poly"))
library(MASS)
example(birthwt)
(bwt.mu <- multinom(low ~ ., bwt))
options(oc)
str(bwt.mu)
bwt.mu$wts
head(bwt.mu)
bwt.mu
bwt.mu$wts
?moran
??moran
vc <- data.frame(
species = c("sheep", "South African pouched mouse", "cow", "mouse", "goat",
"brown rat", "four-striped grass mouse", "African buffalo"),
scientific = c("Ovis aries", "Saccostomus campestris", "Bos taurus",
"Mus musculus", "Capra aegagrus hircus", "Rattus norvegicus",
"Lemniscomys griselda", "Rhabdomys pumilio", "Syncerus caffer"),
vc = c(0.3, 0.21, 0.18, 0.17, 0.16, 0.11, 0.05, 0.02)
)
vc <- data.frame(
species = c("sheep", "South African pouched mouse", "cow", "mouse", "goat",
"brown rat", "four-striped grass mouse", "African buffalo"),
scientific = c("Ovis aries", "Saccostomus campestris", "Bos taurus",
"Mus musculus", "Capra aegagrus hircus", "Rattus norvegicus",
"Rhabdomys pumilio", "Syncerus caffer"),
vc = c(0.3, 0.21, 0.18, 0.17, 0.16, 0.11, 0.05, 0.02)
)
vc
ggplot(data = vc, aes(x = species, y = vc)) + geom_bar() +
ylab("Vector competence index")
library(ggplot2)
ggplot(data = vc, aes(x = species, y = vc)) + geom_bar() +
ylab("Vector competence index")
ggplot(data = vc, aes(x = species, y = vc)) + geom_col() +
ylab("Vector competence index")
head(vc)
?factor
vc$species <- as.factor(vc$species, levels = vc$species)
vc$species <- as.factor(vc$species, levels = unique(vc$species))
vc <- data.frame(
species = c("sheep", "South African pouched mouse", "cow", "mouse", "goat",
"brown rat", "four-striped grass mouse", "African buffalo"),
scientific = c("Ovis aries", "Saccostomus campestris", "Bos taurus",
"Mus musculus", "Capra aegagrus hircus", "Rattus norvegicus",
"Rhabdomys pumilio", "Syncerus caffer"),
vc = c(0.3, 0.21, 0.18, 0.17, 0.16, 0.11, 0.05, 0.02)
)
table(vc$species)
unique(vc$species)
str(vc)
vc$species <- as.factor(as.character(vc$species), levels = unique(as.character(vc$species)))
vc <- data.frame(
species = c("sheep", "South African pouched mouse", "cow", "mouse", "goat",
"brown rat", "four-striped grass mouse", "African buffalo"),
scientific = c("Ovis aries", "Saccostomus campestris", "Bos taurus",
"Mus musculus", "Capra aegagrus hircus", "Rattus norvegicus",
"Rhabdomys pumilio", "Syncerus caffer"),
vc = c(0.3, 0.21, 0.18, 0.17, 0.16, 0.11, 0.05, 0.02)
)
vc$species.order <- as.factor(as.character(vc$species), levels = unique(as.character(vc$species)))
vc$species.order <- factor(as.character(vc$species), levels = unique(as.character(vc$species)))
str(vc)
ggplot(data = vc, aes(x = species.order, y = vc)) + geom_col() +
ylab("Vector competence index") + coord_flip()
unique(as.character(vc$species))
rev(unique(as.character(vc$species)))
vc <- data.frame(
species = c("sheep", "South African pouched mouse", "cow", "mouse", "goat",
"brown rat", "four-striped grass mouse", "African buffalo"),
scientific = c("Ovis aries", "Saccostomus campestris", "Bos taurus",
"Mus musculus", "Capra aegagrus hircus", "Rattus norvegicus",
"Rhabdomys pumilio", "Syncerus caffer"),
vc = c(0.3, 0.21, 0.18, 0.17, 0.16, 0.11, 0.05, 0.02)
)
vc$species.order <- factor(as.character(vc$species),
levels = rev(unique(as.character(vc$species))))
ggplot(data = vc, aes(x = species.order, y = vc)) + geom_col() +
ylab("Vector competence index") + coord_flip()
ggplot(data = vc, aes(x = species.order, y = vc)) + geom_col() +
ylab("Vector competence index") + xlab("") + coord_flip() +
theme_classic() +
theme(axis.title = element_text(size = 12))
ggplot(data = vc, aes(x = species.order, y = vc)) + geom_col() +
ylab("Vector competence index") + xlab("") + coord_flip() +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12))
vc <- data.frame(
species = c("sheep", "South African pouched mouse", "cow", "mouse", "goat",
"brown rat", "four-striped grass mouse", "African buffalo"),
scientific = c("Ovis aries", "Saccostomus campestris", "Bos taurus",
"Mus musculus", "Capra aegagrus hircus", "Rattus norvegicus",
"Rhabdomys pumilio", "Syncerus caffer"),
vc = c(0.27, 0.21, 0.18, 0.17, 0.16, 0.11, 0.05, 0.02)
)
vc$species.order <- factor(as.character(vc$species),
levels = rev(unique(as.character(vc$species))))
ggplot(data = vc, aes(x = species.order, y = vc)) + geom_col() +
ylab("Vector competence index") + xlab("") + coord_flip() +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12))
ggplot(data = vc, aes(x = species.order, y = vc)) + geom_col() +
ylab("Host competence index") + xlab("") + coord_flip() +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12))
vc <- data.frame(
species = c("sheep", "SA pouched mouse", "cow", "mouse", "goat",
"brown rat", "four-striped grass mouse", "African buffalo"),
scientific = c("Ovis aries", "Saccostomus campestris", "Bos taurus",
"Mus musculus", "Capra aegagrus hircus", "Rattus norvegicus",
"Rhabdomys pumilio", "Syncerus caffer"),
vc = c(0.27, 0.21, 0.18, 0.17, 0.16, 0.11, 0.05, 0.02)
)
vc$species.order <- factor(as.character(vc$species),
levels = rev(unique(as.character(vc$species))))
ggplot(data = vc, aes(x = species.order, y = vc)) + geom_col() +
ylab("Host competence index") + xlab("") + coord_flip() +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12))
d <- read.csv("~/Documents/Warwick/mosquito/MosquitoComparisionPaper/abundancedata.csv")
head(d)
# Maarten's stats re-do
library(lme4)
summary(n)
summary(d)
test.mod <- lm(log10(n) ~ inout * region, data = d)
test.2 <- glmer(log10(n) ~ inout * region + (1|location.unnested), data = d))
test.2 <- glmer(log10(n) ~ inout * region + (1|location.unnested), data = d)
test.2 <- lmer(log10(n) ~ inout * region + (1|location.unnested),
family = gaussian, data = d)
?lmer
d$random <- factor(paste(d$region, d$inout, d$locaiton.unnested)
)
head(d)
d$random <- factor(paste(d$region, d$inout, sep = ":"))
head(d)
test.2 <- lmer(log10(n) ~ inout * region + (1|random),
family = gaussian, data = d)
d <- read.csv("~/Documents/Warwick/mosquito/MosquitoComparisionPaper/abundancedata.csv")
d$random <- factor(paste(d$region, d$inout, sep = ":"))
test.2 <- lmer(log10(n) ~ inout * region + (1|random),
family = gaussian, data = d)
d$logn <- log(d$n)
summary(d)
hist(d$logn)
par(mfrow = c(2, 2))
hist(d$logn[d$region == "Malelane"])
hist(d$logn[d$region == "Satara"])
hist(d$logn[d$region == "Satata"])
hist(d$logn[d$region == "Punda"])
hist(d$logn[d$region == "Skukuza"])
test.2 <- lmer(log10(n) ~ inout * region + (1|region),
family = gaussian, data = d)
test.2 <- lmer(log10(n) ~ inout * region + (1|random),
data = d)
summary(test.2)
test.3 <- lmer(log10(n) ~ inout * region + (1|region),
data = d)
summary(test.3)
# Show random effects models are over-fit
t1 <- update(test.1, REML = FALSE)
t2 <- update(test.2, REML = FALSE)
anova(t1, t2)
test.1 <- lm(log10(n) ~ inout * region, data = d)
anova(full.mod, red.mod, test = "Chisq")
d$random <- factor(paste(d$region, d$inout, sep = ":"))
d$logn <- log(d$n)
red.mod <- lm(log10(n) ~ inout * region, data = d)
test.1 <- lmer(log10(n) ~ inout * region + (1|random),
data = d)
test.2 <- lmer(log10(n) ~ inout * region + (1|region),
data = d)
# Show random effects models are over-fit
full.mod <- update(test.2, REML = FALSE)
anova(full.mod, red.mod, test = "Chisq")
summary(test.1)
d$random <- factor(paste(d$region, d$inout, sep = ":"))
d$logn <- log(d$n)
red.mod <- lm(log10(n) ~ inout * region, data = d)
test.1 <- lmer(log10(n) ~ inout * region + (1|random),
data = d)
test.2 <- lmer(log10(n) ~ inout * region + (1|region),
data = d)
# Show random effects models are over-fit
full.mod <- update(test.1, REML = FALSE)
anova(full.mod, red.mod, test = "Chisq")
summary(test.1)
test.1 <- lmer(log10(n) ~ inout +region + (1|random),
data = d)
summary(test.1)
test.1
summary(lme(log10(n) ~ inout*region, random = ~1|random, data = d))
library(nlme)
summary(lme(log10(n) ~ inout*region, random = ~1|random, data = d))
test.1 <- lme(log10(n) ~ inout*region, random = ~1|random, data = d)
anova(test.1)
test.1
View(d)
# Maarten's stats re-do
rm(list = ls())
library(lme4)
d <- read.csv("~/Documents/Warwick/mosquito/MosquitoComparisionPaper/abundancedata.csv")
d$random <- factor(paste(d$region, d$inout, sep = ":"))
d$logn <- log(d$n)
View(d)
citations(lme4)
?citation
citation(lme4)
citation("lme4")
# Maarten's stats re-do
rm(list = ls())
library(lme4)
d <- read.csv("~/Documents/Warwick/mosquito/MosquitoComparisionPaper/abundancedata.csv")
d$random <- factor(paste(d$region, d$inout, sep = ":"))
d$logn <- log(d$n)
View(d)
red.mod <- lm(log10(n) ~ inout * region, data = d)
summary(red.mod)
test.1 <- lmer(log10(n) ~ inout * region + (1|random), data = d)
summary(test.1)
# Compare model with and without the random effect
full.mod <- update(test.1, REML = FALSE)
anova(full.mod, red.mod, test = "Chisq")
full.mod <- update(test.2, REML = FALSE)
anova(full.mod, red.mod, test = "Chisq")
# An alternative because we don't care about region:
test.1 <- lmer(log10(n) ~ inout + (1|region/random),
data = d)
summary(test.1)
test.1 <- lme(log10(n) ~ inout, random = ~region|random, data = d)
View(d)
# Do a quick plot of residuals by region and distance:
plot(resid(red.mod) ~ d$region)
plot(resid(red.mod) ~ d$region*d$inout)
dev.off()
plot(resid(red.mod) ~ d$region*d$random)
View(d)
rm(list = ls())
library(lme4)
d <- read.csv("~/Documents/Warwick/mosquito/MosquitoComparisionPaper/abundancedata.csv")
d$random <- factor(paste(d$region, d$inout, sep = ":"))
d$logn <- log(d$n)
View(d)
red.mod <- lm(log10(n) ~ inout * region, data = d)
summary(red.mod)
d$region <- relevel(d$region, "Satara")
d$region <- relevel(d$region, "regionSatata")
str(d)
table(d$region)
?relevel
d$region2 <- relevel(d$region, ref = "Satata")
red.mod <- lm(log10(n) ~ inout * region2, data = d)
summary(red.mod)
d$region2 <- relevel(d$region, ref = "Skukuza")
red.mod <- lm(log10(n) ~ inout * region2, data = d)
summary(red.mod)
red.mod <- lm(log10(n) ~ inout * region, data = d)
summary(red.mod)
d$region2 <- relevel(d$region, ref = "Punda")
red.mod <- lm(log10(n) ~ inout * region2, data = d)
summary(red.mod)
4*4*8*4
4*8*4
setwd("~/GitHub/mosquito")
load("/Users/u1774615/Google Drive/Conor/data.RData")
library(deSolve)
rm(list = ls())
bh <- (1 / 15) / 365
dh <- bh
bh
1/365
sigma.v.wet <- 1 / 0.33
sigma.v.dry <- 1 / 0.25
sigma.v.wet
sigma.v.dry
1/19
# additional host mortality due to RVF
delta.h <- 1 / 0.01
delta.h

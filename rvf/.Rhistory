r = pop.growth.rate(t, A = A, omega = 2*pi.val, theta = 0)
dNvdt = r * Nv
out <- list(c(Nv = dNvdt))
return(out)
})
}
rhs.day = function(t, Y, parms){
with(as.list(c(Y, parms)), {
# Mosquito - Adults
# r = pop.growth.rate(t, A = A, omega = (2*pi.val)/365, theta = 0)
r <- A * cos(2 * pi.val * t / 365)
dNvdt = r * Nv
out <- list(c(Nv = dNvdt))
return(out)
})
}
par(mfrow = c(1, 2))
Y0 <- c(Nv = 20)
# for yearly time step, omega = 2*pi
times.year <- seq(0, 5, 0.002739726)
sol.year <- as.data.frame(ode(Y0, times.year, rhs.year, list(A = 10), method = "ode45"))
plot(x = sol.year$time, y = sol.year$Nv, type = 'l', ylab = "Number of mosquitoes",
xlab = "time (years)")
Y0 <- c(Nv = 20)
times.day <- seq(0, 1825, 0.1) # for daily time step, omega = 2*pi / 365
sol.day <- as.data.frame(ode(Y0, times.day, rhs.day, list(A = 10)))
r <- 10 * cos(2 * pi.val * 0 / 365)
r
seq(0,100,by=1/120)
10 * cos(2 * pi.val * 0.1 / 365)
10 * cos(2 * pi.val * 0.2 / 365)
10 * cos(2 * pi.val * 0.4 / 365)
10 * cos(2 * pi.val * 60 / 365)
Y0 <- c(Nv = 20)
times.day <- seq(0, 1825, 5) # for daily time step, omega = 2*pi / 365
sol.day <- as.data.frame(ode(Y0, times.day, rhs.day, list(A = 10))) # , rtol = 1e-7, atol = 1e7)
plot(x = sol.day$time, y = sol.day$Nv,
type = 'l', ylab = "Number of mosquitoes", xlab = "time (days)")
times.day <- seq(0, 1825, 1) # for daily time step, omega = 2*pi / 365
sol.day <- as.data.frame(ode(Y0, times.day, rhs.day, list(A = 10))) # , rtol = 1e-7, atol = 1e7)
library("deSolve")
library("ggplot2")
rm(list = ls())
pi.val <- 3.141592653589793
# Trial population growth rate function
#####################################################
pop.growth.rate = function(t, A, omega, theta){
x = A*cos(omega * t + theta)
return(x)
}
par(mfrow = c(1, 2))
# Daily time step
times <- seq(0, 5*365, 1) # for daily time step, omega = ?
plot(x = times/365, y = pop.growth.rate(t = times, A = 20, omega = (2/365)*pi.val,
theta = 0), type = 'l', ylab = "r")
# for yearly time step, omega = 2*pi
times <- seq(0, 5, 0.002739726)
plot(x = times, y = pop.growth.rate(t = times, A = 20, omega = 2*pi.val,
theta = 0), type = 'l', ylab = "r")
# same...
plot(x = pop.growth.rate(t = seq(0, 5, 0.002739726) , A = 20, omega = 2*pi.val,
theta = 0),
y = pop.growth.rate(t = seq(0, 5*365, 1), A = 20, omega = (2/365)*pi.val,
theta = 0), xlab = "years", ylab = "days", pch = 19, cex = 0.2)
abline(a = 0, b = 1, col = "red")
# Trial population model
#####################################################
rhs.year = function(t, Y, parms){
with(as.list(c(Y, parms)), {
# Mosquito - Adults
r <- pop.growth.rate(t, A = A, omega = 2*pi.val, theta = 0)
dNvdt = r * Nv
out <- list(c(Nv = dNvdt))
return(out)
})
}
rhs.day = function(t, Y, parms){
with(as.list(c(Y, parms)), {
# Mosquito - Adults
# r = pop.growth.rate(t, A = A, omega = (2*pi.val)/365, theta = 0)
r <- A * cos(2 * pi.val * t / 365)
dNvdt = r * Nv
out <- list(c(Nv = dNvdt))
return(out)
})
}
par(mfrow = c(1, 2))
Y0 <- c(Nv = 20)
# for yearly time step, omega = 2*pi
times.year <- seq(0, 5, 0.002739726)
sol.year <- as.data.frame(ode(Y0, times.year, rhs.year, list(A = 10), method = "ode45"))
plot(x = sol.year$time, y = sol.year$Nv, type = 'l', ylab = "Number of mosquitoes",
xlab = "time (years)")
# for daily time step, omega = 2*pi/365
Y0 <- c(Nv = 20)
times.day <- seq(0, 1825, 1) # for daily time step, omega = 2*pi / 365
sol.day <- as.data.frame(ode(Y0, times.day, rhs.day, list(A = 10))) # , rtol = 1e-7, atol = 1e7)
plot(x = sol.day$time, y = sol.day$Nv,
type = 'l', ylab = "Number of mosquitoes", xlab = "time (days)")
head(sol.day)
10 * cos(2 * pi.val * 0 / 365) * 20 * 1 + 20
10 * cos(2 * pi.val * 0 / 365)
10 * cos(2 * pi.val * 1 / 365)
10 * cos(2 * pi.val * 10 / 365)
10 * cos(2 * pi.val * 20 / 365)
10 * cos(2 * pi.val * 0)
10 * cos(2 * pi.val * 0.1)
times.year <- seq(0, 5, 0.01)
sol.year <- as.data.frame(ode(Y0, times.year, rhs.year, list(A = 10), method = "ode45"))
plot(x = sol.year$time, y = sol.year$Nv, type = 'l', ylab = "Number of mosquitoes",
xlab = "time (years)")
Y0 <- c(Nv = 20)
times.day <- seq(0, 1825, 20) # for daily time step, omega = 2*pi / 365
sol.day <- as.data.frame(ode(Y0, times.day, rhs.day, list(A = 10))) # , rtol = 1e-7, atol = 1e7)
plot(x = sol.day$time, y = sol.day$Nv,
type = 'l', ylab = "Number of mosquitoes", xlab = "time (days)")
head(sol.day)
####################################################
library(deSolve)
library(ggplot2)
setwd("~/GitHub/mosquito/rvf")
rm(list = ls())
# Load parameters
source('parameters_one_population.R', chdir = TRUE)
source('parameters_two_populations.R', chdir = TRUE)
source('parameters_three_populations.R', chdir = TRUE)
# Load odes
source('to_define_odes.R', chdir = TRUE)
# convenience functions for plots (functions = plot_hosts(), plot_vectors())
source('to_make_plots.R', chdir = TRUE)
# Load parameters
source('parameters_one_population.R', chdir = TRUE)
source('parameters_two_populations.R', chdir = TRUE)
source('parameters_three_populations.R', chdir = TRUE)
# Load odes
source('to_define_odes.R', chdir = TRUE)
# convenience functions for plots (functions = plot_hosts(), plot_vectors())
source('to_make_plots.R', chdir = TRUE)
Y0 <- c(Sh = 500, Eh = 0, Ih = 0, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.002)
sol <- as.data.frame(ode(Y0, times, rhs.one, params.one))
plot_hosts(sol, times)
plot_vectors(sol, times)
####################################################
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.002)
sol.dz <- as.data.frame(ode(Y0, times, rhs.one, params.one, method = "ode45"))
plot_hosts(sol.dz, times)
plot_vectors(sol.dz, seq(490, 500, 0.0005))
tail(sol)
head(sol)
head(sol.dz)
tail(sol.dz)
plot_hosts(sol.dz, times)
plot_vectors(sol.dz, seq(490, 500, 0.0005))
365 / 14
source('parameters_one_population.R', chdir = TRUE)
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.002)
sol.dz <- as.data.frame(ode(Y0, times, rhs.one, params.one, method = "ode45"))
plot_hosts(sol.dz, times)
plot_vectors(sol.dz, seq(490, 500, 0.0005))
plot_vectors(sol.dz, times)
plot_hosts(sol.dz, times)
times <- seq(0, 5, 0.0002)
sol.dz <- as.data.frame(ode(Y0, times, rhs.one, params.one, method = "ode45"))
plot_hosts(sol.dz, times)
plot_vectors(sol.dz, times)
head(sol.dz)
head(sol.dz[sol.dz$Ev1 < -])
head(sol.dz[sol.dz$Ev1 < -1, ])
head(sol.dz[sol.dz$Ev2 < -1, ])
head(sol.dz[sol.dz$Ev2 < -3, ])
head(sol.dz[sol.dz$Nv < -1, ])
head(sol.dz[sol.dz$Ev2 < 0, ])
library("deSolve")
library("ggplot2")
rm(list = ls())
pi.val <- 3.141592653589793
rm(list = ls())
# Load parameters
source('parameters_one_population.R', chdir = TRUE)
source('parameters_two_populations.R', chdir = TRUE)
source('parameters_three_populations.R', chdir = TRUE)
# Load odes
source('to_define_odes.R', chdir = TRUE)
# convenience functions for plots (functions = plot_hosts(), plot_vectors())
source('to_make_plots.R', chdir = TRUE)
# One mosquito
Y0 <- c(Sh = 500, Eh = 0, Ih = 0, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.002)
sol <- as.data.frame(ode(Y0, times, rhs.one, params.one))
plot_hosts(sol, times)
plot_vectors(sol, times)
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.0002)
sol.dz <- as.data.frame(ode(Y0, times, rhs.one, params.one, method = "ode45"))
plot_hosts(sol.dz, times)
plot_vectors(sol.dz, times)
leach.death = function(t, A, d0, omega, theta){
x = A*cos(omega * t + theta)
d = d0 * exp(x)
return(d)
}
par(mfrow = c(2, 2), mar = c(3, 3, 2, 2))
plot(x = tvec, y = 1/leach.death(tvec, A = - 2, d0 = 0.1, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -2, d0 = 0.1")
tvec = seq(0, 3, 0.0001)
par(mfrow = c(2, 2), mar = c(3, 3, 2, 2))
plot(x = tvec, y = 1/leach.death(tvec, A = - 2, d0 = 0.1, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -2, d0 = 0.1")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.16, d0 = 0.1, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -0.16, d0 = 0.1")
plot(x = tvec, y = 1/leach.death(tvec, A = -1, d0 = 0.1, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -2, d0 = 0.2")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.3, d0 = 0.05, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -0.3, d0 = 0.05") # USE THIS ONE!!!!!
25/365
30/365
plot(x = tvec, y = 1/leach.death(tvec, A = -0.03, d0 = 0.1, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -2, d0 = 0.2")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.03, d0 = 0.01, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -0.03, d0 = 0.01")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.3, d0 = 0.01, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -0.3, d0 = 0.01")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.3, d0 = 0.05, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -0.3, d0 = 0.05")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.3, d0 = 0.1, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -0.3, d0 = 0.1")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.3, d0 = 0.9, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -0.3, d0 = 0.9")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.3, d0 = 2, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity", xlab = "years",
main = "A = -0.3, d0 = 0.9")
leach.death
plot(x = tvec, y = 1/leach.death(tvec, A = -0.3, d0 = 10, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (years)", xlab = "years",
main = "A = -0.3, d0 = 10")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.3, d0 = 12, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (years)", xlab = "years",
main = "A = -0.3, d0 = 12")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.2, d0 = 12, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (years)", xlab = "years",
main = "A = -0.2, d0 = 12")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.1, d0 = 12, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (years)", xlab = "years",
main = "A = -0.1, d0 = 12")
par(mfrow = c(2, 2), mar = c(3, 3, 2, 2))
plot(x = tvec, y = 1/leach.death(tvec, A = -0.3, d0 = 12, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (years)", xlab = "years",
main = "A = -0.3, d0 = 12")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.1, d0 = 12, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (years)", xlab = "years",
main = "A = -0.1, d0 = 12")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.1, d0 = 14, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (years)", xlab = "years",
main = "A = -0.3, d0 = 0.9") # yearly timestep
plot(x = tvec, y = 1/leach.death(tvec, A = -0.1, d0 = 13, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (years)", xlab = "years",
main = "A = -0.1, d0 = 12")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.1, d0 = 13.5, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (years)", xlab = "years",
main = "A = -0.1, d0 = 13.5")
min(1/leach.death(tvec, A = -0.1, d0 = 13.5, omega = 2*pi, theta = 0))
max(1/leach.death(tvec, A = -0.1, d0 = 13.5, omega = 2*pi, theta = 0))
####################################################
library(deSolve)
library(ggplot2)
setwd("~/GitHub/mosquito/rvf")
rm(list = ls())
# Load parameters
source('parameters_one_population.R', chdir = TRUE)
source('parameters_two_populations.R', chdir = TRUE)
source('parameters_three_populations.R', chdir = TRUE)
# Load odes
source('to_define_odes.R', chdir = TRUE)
# convenience functions for plots (functions = plot_hosts(), plot_vectors())
source('to_make_plots.R', chdir = TRUE)
# One mosquito
Y0 <- c(Sh = 500, Eh = 0, Ih = 0, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.002)
sol <- as.data.frame(ode(Y0, times, rhs.one, params.one))
plot_hosts(sol, times)
plot_vectors(sol, times)
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.0002)
sol.dz <- as.data.frame(ode(Y0, times, rhs.one, params.one, method = "ode45"))
plot_hosts(sol.dz, times)
plot_vectors(sol.dz, times)
leach.death = function(t, A, d0, omega, theta){
x = A*cos(omega * t + theta)
d = d0 * exp(x)
return(d)
}
tvec = seq(0, 3, 0.0001)
plot(x = tvec, y = 1/leach.death(tvec, A = -0.1, d0 = 13.5, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (years)", xlab = "years",
main = "A = -0.1, d0 = 13.5")
plot(x = tvec, y = 1/leach.death(tvec, A = -0.3, d0 = 0.05, omega = 2*pi, theta = 0),
type = "l", ylab = "vector longevity (days)", xlab = "years",
main = "A = -0.3, d0 = 0.05") # USE THIS ONE for daily timestep !!!!!
plot(x = tvec, y = leach.death(tvec, A = -0.1, d0 = 13.5, omega = 2*pi, theta = 0),
type = "l", ylab = "vector death rate (year)", xlab = "years",
main = "A = -0.1, d0 = 13.5")
plot(x = tvec, y = leach.death(tvec, A = -0.3, d0 = 0.05, omega = 2*pi, theta = 0),
type = "l", ylab = "vector death rate (days)", xlab = "years",
main = "A = -0.3, d0 = 0.05")
####################################################
library(deSolve)
library(ggplot2)
setwd("~/GitHub/mosquito/rvf")
rm(list = ls())
# Load parameters
source('parameters_one_population.R', chdir = TRUE)
source('parameters_two_populations.R', chdir = TRUE)
source('parameters_three_populations.R', chdir = TRUE)
# Load odes
source('to_define_odes.R', chdir = TRUE)
# convenience functions for plots (functions = plot_hosts(), plot_vectors())
source('to_make_plots.R', chdir = TRUE)
# One mosquito
Y0 <- c(Sh = 500, Eh = 0, Ih = 0, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.002)
sol <- as.data.frame(ode(Y0, times, rhs.one, params.one))
plot_hosts(sol, times)
plot_vectors(sol, times)
# Two mosquitoes
Y0 <- c(Sh = 500, Eh = 0, Ih = 0, Rh = 0,
N1v = 20 , E1v1 = 0, E1v2 = 0, E1v3 = 0, I1v = 0,
N2v = 20 , E2v1 = 0, E2v2 = 0, E2v3 = 0, I2v = 0)
sol <- as.data.frame(ode(Y0, times, rhs.two, params.two))
plot_hosts(sol, seq(380, 400, 0.0005))
plot_vectors(sol, seq(380, 400, 0.0005))
Y0 <- c(Sh = 500, Eh = 0, Ih = 0, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.002)
sol <- as.data.frame(ode(Y0, times, rhs.one, params.one))
plot_hosts(sol, times)
plot_vectors(sol, times)
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.0002)
sol.dz <- as.data.frame(ode(Y0, times, rhs.one, params.one, method = "ode45"))
plot_hosts(sol.dz, times)
plot_vectors(sol.dz, times)
rm(list = ls())
# Load parameters
source('parameters_one_population.R', chdir = TRUE)
source('parameters_two_populations.R', chdir = TRUE)
source('parameters_three_populations.R', chdir = TRUE)
# Load odes
source('to_define_odes.R', chdir = TRUE)
# convenience functions for plots (functions = plot_hosts(), plot_vectors())
source('to_make_plots.R', chdir = TRUE)
# Two mosquitoes
Y0 <- c(Sh = 500, Eh = 0, Ih = 0, Rh = 0,
N1v = 20 , E1v1 = 0, E1v2 = 0, E1v3 = 0, I1v = 0,
N2v = 20 , E2v1 = 0, E2v2 = 0, E2v3 = 0, I2v = 0)
times <- seq(0, 5, 0.002)
sol <- as.data.frame(ode(Y0, times, rhs.two, params.two))
plot_hosts(sol, times)
plot_vectors(sol, times)
# Three mosquitoes
Y0 <- c(Sh = 500, Eh = 0, Ih = 0, Rh = 0,
N1v = 20 , E1v1 = 0, E1v2 = 0, E1v3 = 0, I1v = 0,
N2v = 50 , E2v1 = 0, E2v2 = 0, E2v3 = 0, I2v = 0,
N3v = 20 , E3v1 = 0, E3v2 = 0, E3v3 = 0, I3v = 0)
times <- seq(0, 5, 0.002)
sol <- as.data.frame(ode(Y0, times, rhs.three, params.three))
plot_hosts(sol, times)
plot_vectors(sol, times)
# Two mosquitoes
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
N1v = 20 , E1v1 = 0, E1v2 = 0, E1v3 = 0, I1v = 0,
N2v = 20 , E2v1 = 0, E2v2 = 0, E2v3 = 0, I2v = 0)
times <- seq(0, 5, 0.002)
sol <- as.data.frame(ode(Y0, times, rhs.two, params.two))
plot_hosts(sol, times)
plot_vectors(sol, times)
####################################################
# One mosquito
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
times <- seq(0, 5, 0.0002)
sol.dz <- as.data.frame(ode(Y0, times, rhs.one, params.one, method = "ode45"))
plot_hosts(sol.dz, times)
plot_vectors(sol.dz, times)
# Two mosquitoes
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
N1v = 20 , E1v1 = 0, E1v2 = 0, E1v3 = 0, I1v = 0,
N2v = 20 , E2v1 = 0, E2v2 = 0, E2v3 = 0, I2v = 0)
times <- seq(0, 5, 0.002)
sol <- as.data.frame(ode(Y0, times, rhs.two, params.two))
plot_hosts(sol, times)
plot_vectors(sol, times)
head(sol[sol$time > 0.9 & sol$time < 0.91, ])
1/0.88
7/0.88
13.5/365
1/20
365/20
365/15
365/8
View(params.one)
library(deSolve)
library(ggplot2)
setwd("~/GitHub/mosquito/rvf") # change this working directory to yours
rm(list = ls())
# Load odes & function to run model
source('to_define_odes.R', chdir = TRUE)
source('to_define_Conor_function.R', chdir = TRUE)
source('to_make_plots.R', chdir = TRUE)
sol <- run_one(number.mosquitoes = 1, output.name = "test")
# Function to run model
run_one = function(number.mosquitoes, parameter.file = file.choose(),
times = seq(0, 5, 0.0002),
output.file = TRUE, output.name = "rvf"){
number.mosquitoes <- as.numeric(number.mosquitoes)
if (number.mosquitoes == 1) {
print("running one-mosquito model")
source(parameter.file)
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
Nv = 20 , Ev1 = 0, Ev2 = 0, Ev3 = 0, Iv = 0)
if (length(params) == 14){
sol <- as.data.frame(ode(Y0, times, rhs.one, params,
method = "ode45"))
} else{
print("error: check parameter file, one-mosquito model needs 14 parameters")
}
} else if (number.mosquitoes == 2) {
print("running two-mosquito model")
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
N1v = 20 , E1v1 = 0, E1v2 = 0, E1v3 = 0, I1v = 0,
N2v = 20 , E2v1 = 0, E2v2 = 0, E2v3 = 0, I2v = 0)
if (length(params) == 17){
sol <- as.data.frame(ode(Y0, times, rhs.two, params))
} else{
print("error: check parameter file, two-mosquito model needs 17 parameters")
}
} else if (number.mosquitoes == 3) {
print("running three-mosquito model")
Y0 <- c(Sh = 500, Eh = 5, Ih = 5, Rh = 0,
N1v = 20 , E1v1 = 0, E1v2 = 0, E1v3 = 0, I1v = 0,
N2v = 50 , E2v1 = 0, E2v2 = 0, E2v3 = 0, I2v = 0,
N3v = 20 , E3v1 = 0, E3v2 = 0, E3v3 = 0, I3v = 0)
if (length(params) == 20){
sol <- as.data.frame(ode(Y0, times, rhs.three, params))
} else{
print("error: check parameter file, three-mosquito model needs 20 parameters")
}
} else{
print("error - number of mosquitoes not 1, 2, or 3")
}
if(output.file){
write.csv(sol, paste(output.name, ".csv", sep = ""))
}
return(sol)
}
rm(list = ls())
# Load odes & function to run model
source('to_define_odes.R', chdir = TRUE)
source('to_define_Conor_function.R', chdir = TRUE)
source('to_make_plots.R', chdir = TRUE)
sol <- run_one(number.mosquitoes = 1, output.name = "test")
source('to_make_plots.R', chdir = TRUE)
plot_hosts(sol)
plot_vectors(sol)
sol <- run_one(number.mosquitoes = 2, output.name = "test")
plot_hosts(sol)
plot_vectors(sol)
sol <- run_one(number.mosquitoes = 2, output.name = "test")
library(deSolve)
library(ggplot2)
setwd("~/GitHub/mosquito/rvf") # change this working directory to yours
rm(list = ls())
# Load odes & function to run model
source('to_define_odes.R', chdir = TRUE)
source('to_define_Conor_function.R', chdir = TRUE)
source('to_make_plots.R', chdir = TRUE)
# Example of how it works...
sol <- run_one(number.mosquitoes = 2, output.name = "test")
library(deSolve)
library(ggplot2)
setwd("~/GitHub/mosquito/rvf") # change this working directory to yours
rm(list = ls())
# Load odes & function to run model
source('to_define_odes.R', chdir = TRUE)
source('to_define_Conor_function.R', chdir = TRUE)
source('to_make_plots.R', chdir = TRUE)
sol <- run_one(number.mosquitoes = 1, output.name = "test")
sol2 <- run_one(number.mosquitoes = 2, output.name = "test2")
plot_vectors(sol2)
sol3 <- run_one(number.mosquitoes = 3, output.name = "test2")
